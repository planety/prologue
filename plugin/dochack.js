/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI704643086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301391 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI956301397 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI956301391, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI956301397.node = NNI956301397;
var NNI704643086 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI704643086.node = NNI704643086;

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var objectID_1191182513 = [0];

function setTheme(theme_553648134) {
    document.documentElement.setAttribute("data-theme", theme_553648134);
    window.localStorage.setItem("theme", theme_553648134);

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_553649327 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_553649327 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_553649327;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_553649327 = addInt(i_553649327, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function onDOMLoaded(e_553648169) {
            
function HEX3Aanonymous_553648193(event_553648194) {
                event_553648194.target.parentNode.style.display = "none";
                event_553648194.target.parentNode.nextSibling.style.display = "inline";

              
            }

    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      var pragmaDots_553648192 = null;
      var colontmp__553649318 = [];
      colontmp__553649318 = document.getElementsByClassName("pragmadots");
      var i_553649320 = 0;
      var L_553649321 = (colontmp__553649318).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553649320 < L_553649321)) break Label3;
            pragmaDots_553648192 = colontmp__553649318[chckIndx(i_553649320, 0, (colontmp__553649318).length - 1)];
            pragmaDots_553648192.onclick = HEX3Aanonymous_553648193;
            i_553649320 = addInt(i_553649320, 1);
            if (!(((colontmp__553649318).length == L_553649321))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function isWhitespace_553648536(x_553648537) {
  var result_553648538 = false;

    result_553648538 = (((x_553648537.nodeName == "#text") && !/\S/.test(x_553648537.textContent)) || (x_553648537.nodeName == "#comment"));

  return result_553648538;

}

function toToc_553648539(x_553648540, father_553648541) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

    if ((x_553648540.nodeName == "UL")) {
    var f_553648549 = {heading: null, kids: [], sortId: (father_553648541.kids).length, doSort: false};
    var i_553648550 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_553648550 < x_553648540.childNodes.length)) break Label2;
          var nxt_553648551 = addInt(i_553648550, 1);
          Label3: {
              Label4: while (true) {
                if (!(nxt_553648551 < x_553648540.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_553648536(x_553648540.childNodes[nxt_553648551]);                }              if (!Temporary5) break Label4;
                nxt_553648551 = addInt(nxt_553648551, 1);
              }
          };
            if (!(nxt_553648551 < x_553648540.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_553648540.childNodes[i_553648550].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_553648540.childNodes[i_553648550].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_553648540.childNodes[nxt_553648551].nodeName == "UL");            }          if (Temporary6) {
          var e_553648564 = {heading: x_553648540.childNodes[i_553648550].childNodes[0], kids: [], sortId: (f_553648549.kids).length, doSort: false};
          var it_553648565 = x_553648540.childNodes[nxt_553648551];
          Label9: {
            var j_553648570 = 0;
            var colontmp__553649334 = 0;
            colontmp__553649334 = it_553648565.childNodes.length;
            var i_553649335 = 0;
            Label10: {
                Label11: while (true) {
                if (!(i_553649335 < colontmp__553649334)) break Label11;
                  j_553648570 = i_553649335;
                  toToc_553648539(it_553648565.childNodes[j_553648570], e_553648564);
                  i_553649335 = addInt(i_553649335, 1);
                }
            };
          };
          f_553648549.kids.push(e_553648564);;
          i_553648550 = addInt(nxt_553648551, 1);
          }
          else {
            toToc_553648539(x_553648540.childNodes[i_553648550], f_553648549);
            i_553648550 = addInt(i_553648550, 1);
          }
          
        }
    };
    father_553648541.kids.push(f_553648549);;
    }
    else {
    if (isWhitespace_553648536(x_553648540)) {
    }
    else {
    if ((x_553648540.nodeName == "LI")) {
    var idx_553648588 = [];
    Label12: {
      var i_553648593 = 0;
      var colontmp__553649338 = 0;
      colontmp__553649338 = x_553648540.childNodes.length;
      var i_553649339 = 0;
      Label13: {
          Label14: while (true) {
          if (!(i_553649339 < colontmp__553649338)) break Label14;
            i_553648593 = i_553649339;
            if (!(isWhitespace_553648536(x_553648540.childNodes[i_553648593]))) {
            idx_553648588.push(i_553648593);;
            }
            
            i_553649339 = addInt(i_553649339, 1);
          }
      };
    };
      if (!((idx_553648588).length == 2)) Temporary15 = false; else {        Temporary15 = (x_553648540.childNodes[idx_553648588[chckIndx(1, 0, (idx_553648588).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    var e_553648609 = {heading: x_553648540.childNodes[idx_553648588[chckIndx(0, 0, (idx_553648588).length - 1)]], kids: [], sortId: (father_553648541.kids).length, doSort: false};
    var it_553648610 = x_553648540.childNodes[idx_553648588[chckIndx(1, 0, (idx_553648588).length - 1)]];
    Label16: {
      var j_553648615 = 0;
      var colontmp__553649342 = 0;
      colontmp__553649342 = it_553648610.childNodes.length;
      var i_553649343 = 0;
      Label17: {
          Label18: while (true) {
          if (!(i_553649343 < colontmp__553649342)) break Label18;
            j_553648615 = i_553649343;
            toToc_553648539(it_553648610.childNodes[j_553648615], e_553648609);
            i_553649343 = addInt(i_553649343, 1);
          }
      };
    };
    father_553648541.kids.push(e_553648609);;
    }
    else {
      Label19: {
        var i_553648624 = 0;
        var colontmp__553649346 = 0;
        colontmp__553649346 = x_553648540.childNodes.length;
        var i_553649347 = 0;
        Label20: {
            Label21: while (true) {
            if (!(i_553649347 < colontmp__553649346)) break Label21;
              i_553648624 = i_553649347;
              toToc_553648539(x_553648540.childNodes[i_553648624], father_553648541);
              i_553649347 = addInt(i_553649347, 1);
            }
        };
      };
    }
    
    }
    else {
    father_553648541.kids.push({heading: x_553648540, kids: [], sortId: (father_553648541.kids).length, doSort: false});;
    }
    }}

  
}

function extractItems_553648327(x_553648328, heading_553648329, items_553648330, items_553648330_Idx) {
  BeforeRet: {
    if ((x_553648328 == null)) {
    break BeforeRet;
    }
    
    if ((!((x_553648328.heading == null)) && (x_553648328.heading.textContent == heading_553648329))) {
    Label1: {
      var i_553648347 = 0;
      var colontmp__553649350 = 0;
      colontmp__553649350 = (x_553648328.kids).length;
      var i_553649351 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553649351 < colontmp__553649350)) break Label3;
            i_553648347 = i_553649351;
            items_553648330[items_553648330_Idx].push(x_553648328.kids[chckIndx(i_553648347, 0, (x_553648328.kids).length - 1)].heading);;
            i_553649351 = addInt(i_553649351, 1);
          }
      };
    };
    }
    else {
      Label4: {
        var k_553648373 = null;
        var i_553649355 = 0;
        var L_553649356 = (x_553648328.kids).length;
        Label5: {
            Label6: while (true) {
            if (!(i_553649355 < L_553649356)) break Label6;
              k_553648373 = x_553648328.kids[chckIndx(i_553649355, 0, (x_553648328.kids).length - 1)];
              extractItems_553648327(k_553648373, heading_553648329, items_553648330, items_553648330_Idx);
              i_553649355 = addInt(i_553649355, 1);
              if (!(((x_553648328.kids).length == L_553649356))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  
}

function tree_553648258(tag_553648259, kids_553648260) {
  var result_553648261 = null;

    result_553648261 = document.createElement(tag_553648259);
    Label1: {
      var k_553648275 = null;
      var i_553649368 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553649368 < (kids_553648260).length)) break Label3;
            k_553648275 = kids_553648260[chckIndx(i_553649368, 0, (kids_553648260).length - 1)];
            result_553648261.appendChild(k_553648275);
            i_553649368 = addInt(i_553649368, 1);
          }
      };
    };

  return result_553648261;

}

function text_553648283(s_553648284) {
  var result_553648285 = null;

    result_553648285 = document.createTextNode(s_553648284);

  return result_553648285;

}

function uncovered_553648728(x_553648729) {
    var Temporary1;

  var result_553648730 = null;

  BeforeRet: {
    if ((((x_553648729.kids).length == 0) && !((x_553648729.heading == null)))) {
    if (!(x_553648729.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_553648729;
    }
    else {
    Temporary1 = null;
    }
    
    result_553648730 = Temporary1;
    break BeforeRet;
    }
    
    result_553648730 = {heading: x_553648729.heading, kids: [], sortId: x_553648729.sortId, doSort: x_553648729.doSort};
    Label2: {
      var k_553648745 = null;
      var i_553649375 = 0;
      var L_553649376 = (x_553648729.kids).length;
      Label3: {
          Label4: while (true) {
          if (!(i_553649375 < L_553649376)) break Label4;
            k_553648745 = x_553648729.kids[chckIndx(i_553649375, 0, (x_553648729.kids).length - 1)];
            var y_553648746 = uncovered_553648728(k_553648745);
            if (!((y_553648746 == null))) {
            result_553648730.kids.push(y_553648746);;
            }
            
            i_553649375 = addInt(i_553649375, 1);
            if (!(((x_553648729.kids).length == L_553649376))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_553648730.kids).length == 0)) {
    result_553648730 = null;
    }
    
  };

  return result_553648730;

}

function mergeTocs_553648758(orig_553648759, news_553648760) {
  var result_553648761 = null;

    result_553648761 = uncovered_553648728(orig_553648759);
    if ((result_553648761 == null)) {
    result_553648761 = news_553648760;
    }
    else {
      Label1: {
        var i_553648773 = 0;
        var colontmp__553649371 = 0;
        colontmp__553649371 = (news_553648760.kids).length;
        var i_553649372 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_553649372 < colontmp__553649371)) break Label3;
              i_553648773 = i_553649372;
              result_553648761.kids.push(news_553648760.kids[chckIndx(i_553648773, 0, (news_553648760.kids).length - 1)]);;
              i_553649372 = addInt(i_553649372, 1);
            }
        };
      };
    }
    

  return result_553648761;

}

function buildToc_553648778(orig_553648779, types_553648780, procs_553648781) {
  var result_553648782 = null;

    var newStuff_553648787 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      var t_553648791 = null;
      var i_553649363 = 0;
      var L_553649364 = (types_553648780).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553649363 < L_553649364)) break Label3;
            t_553648791 = types_553648780[chckIndx(i_553649363, 0, (types_553648780).length - 1)];
            var c_553648796 = {heading: t_553648791.cloneNode(true), kids: [], doSort: true, sortId: 0};
            t_553648791.__karaxMarker__ = true;
            Label4: {
              var p_553648800 = null;
              var i_553649360 = 0;
              var L_553649361 = (procs_553648781).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_553649360 < L_553649361)) break Label6;
                    p_553648800 = procs_553648781[chckIndx(i_553649360, 0, (procs_553648781).length - 1)];
                    if (!(p_553648800.hasOwnProperty('__karaxMarker__'))) {
                    var xx_553648801 = p_553648800.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_553648801).length == 1) && (xx_553648801[chckIndx(0, 0, (xx_553648801).length - 1)].textContent == t_553648791.textContent))) {
                    var q_553648806 = tree_553648258("A", [text_553648283(p_553648800.title)]);
                    q_553648806.setAttribute("href", p_553648800.getAttribute("href"));
                    c_553648796.kids.push({heading: q_553648806, kids: [], sortId: 0, doSort: false});;
                    p_553648800.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    i_553649360 = addInt(i_553649360, 1);
                    if (!(((procs_553648781).length == L_553649361))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            newStuff_553648787.kids.push(c_553648796);;
            i_553649363 = addInt(i_553649363, 1);
            if (!(((types_553648780).length == L_553649364))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_553648782 = mergeTocs_553648758(orig_553648779, newStuff_553648787);

  return result_553648782;

}

function add_553648276(parent_553648277, kid_553648278) {
    if (((parent_553648277.nodeName == "TR") && ((kid_553648278.nodeName == "TD") || (kid_553648278.nodeName == "TH")))) {
    var k_553648279 = document.createElement("TD");
    k_553648279.appendChild(kid_553648278);
    parent_553648277.appendChild(k_553648279);
    }
    else {
    parent_553648277.appendChild(kid_553648278);
    }
    

  
}

function setClass_553648280(e_553648281, value_553648282) {
    e_553648281.setAttribute("class", value_553648282);

  
}

function toHtml_553648406(x_553648407, isRoot_553648408) {
    
function HEX3Aanonymous_553648426(a_553648427, b_553648428) {
      var result_553648429 = 0;

      BeforeRet: {
        if ((!((a_553648427.heading == null)) && !((b_553648428.heading == null)))) {
        var x_553648438 = a_553648427.heading.textContent;
        var y_553648439 = b_553648428.heading.textContent;
        if ((x_553648438 < y_553648439)) {
        result_553648429 = (-1);
        break BeforeRet;
        }
        
        if ((y_553648439 < x_553648438)) {
        result_553648429 = 1;
        break BeforeRet;
        }
        
        result_553648429 = 0;
        break BeforeRet;
        }
        else {
          result_553648429 = subInt(a_553648427.sortId, b_553648428.sortId);
          break BeforeRet;
        }
        
      };

      return result_553648429;

    }

  var result_553648409 = null;

  BeforeRet: {
    if ((x_553648407 == null)) {
    result_553648409 = null;
    break BeforeRet;
    }
    
    if (((x_553648407.kids).length == 0)) {
    if ((x_553648407.heading == null)) {
    result_553648409 = null;
    break BeforeRet;
    }
    
    result_553648409 = x_553648407.heading.cloneNode(true);
    break BeforeRet;
    }
    
    result_553648409 = tree_553648258("DIV", []);
    if ((!((x_553648407.heading == null)) && !(x_553648407.heading.hasOwnProperty('__karaxMarker__')))) {
    add_553648276(result_553648409, x_553648407.heading.cloneNode(true));
    }
    
    var ul_553648425 = tree_553648258("UL", []);
    if (isRoot_553648408) {
    setClass_553648280(ul_553648425, "simple simple-toc");
    }
    else {
    setClass_553648280(ul_553648425, "simple");
    }
    
    if (x_553648407.doSort) {
    x_553648407.kids.sort(HEX3Aanonymous_553648426);
    }
    
    Label1: {
      var k_553648451 = null;
      var i_553649379 = 0;
      var L_553649380 = (x_553648407.kids).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553649379 < L_553649380)) break Label3;
            k_553648451 = x_553648407.kids[chckIndx(i_553649379, 0, (x_553648407.kids).length - 1)];
            var y_553648452 = toHtml_553648406(k_553648451, false);
            if (!((y_553648452 == null))) {
            add_553648276(ul_553648425, tree_553648258("LI", [y_553648452]));
            }
            
            i_553649379 = addInt(i_553649379, 1);
            if (!(((x_553648407.kids).length == L_553649380))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_553648425.childNodes.length == 0))) {
    add_553648276(result_553648409, ul_553648425);
    }
    
    if ((result_553648409.childNodes.length == 0)) {
    result_553648409 = null;
    }
    
  };

  return result_553648409;

}

function replaceById_553648286(id_553648287, newTree_553648288) {
    var x_553648289 = document.getElementById(id_553648287);
    x_553648289.parentNode.replaceChild(newTree_553648288, x_553648289);
    newTree_553648288.id = id_553648287;

  
}

function togglevis_553648836(d_553648837) {
    if ((d_553648837.style.display == "none")) {
    d_553648837.style.display = "inline";
    }
    else {
      d_553648837.style.display = "none";
    }
    

  
}

function groupBy(value_553648839) {
    var toc_553648840 = document.getElementById("toc-list");
    if ((alternative_553648835[0] == null)) {
    var tt_553648848 = {heading: null, kids: [], sortId: 0, doSort: false};
    toToc_553648539(toc_553648840, tt_553648848);
    tt_553648848 = tt_553648848.kids[chckIndx(0, 0, (tt_553648848.kids).length - 1)];
    var types_553648853 = [[]];
    var procs_553648858 = [[]];
    extractItems_553648327(tt_553648848, "Types", types_553648853, 0);
    extractItems_553648327(tt_553648848, "Procs", procs_553648858, 0);
    extractItems_553648327(tt_553648848, "Converters", procs_553648858, 0);
    extractItems_553648327(tt_553648848, "Methods", procs_553648858, 0);
    extractItems_553648327(tt_553648848, "Templates", procs_553648858, 0);
    extractItems_553648327(tt_553648848, "Macros", procs_553648858, 0);
    extractItems_553648327(tt_553648848, "Iterators", procs_553648858, 0);
    var ntoc_553648859 = buildToc_553648778(tt_553648848, types_553648853[0], procs_553648858[0]);
    var x_553648860 = toHtml_553648406(ntoc_553648859, true);
    alternative_553648835[0] = tree_553648258("DIV", [x_553648860]);
    }
    
    if ((value_553648839 == "type")) {
    replaceById_553648286("tocRoot", alternative_553648835[0]);
    }
    else {
    replaceById_553648286("tocRoot", tree_553648258("DIV", []));
    }
    
    togglevis_553648836(document.getElementById("toc-list"));

  
}

function HEX5BHEX5D_721421595(s_721421598, x_721421599) {
  var result_721421600 = [];

    var a_721421602 = x_721421599.a;
    var L_721421604 = addInt(subInt(subInt((s_721421598).length, x_721421599.b), a_721421602), 1);
    result_721421600 = nimCopy(null, mnewString(chckRange(L_721421604, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_721421609 = 0;
      var i_553649389 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553649389 < L_721421604)) break Label3;
            i_721421609 = i_553649389;
            result_721421600[chckIndx(i_721421609, 0, (result_721421600).length - 1)] = s_721421598[chckIndx(addInt(i_721421609, a_721421602), 0, (s_721421598).length - 1)];
            i_553649389 = addInt(i_553649389, 1);
          }
      };
    };

  return result_721421600;

}

function HEX2EHEX2E_956301416(a_956301419, b_956301420) {
  var result_956301423 = ({a: 0, b: 0});

    result_956301423 = nimCopy(result_956301423, {a: a_956301419, b: b_956301420}, NTI956301397);

  return result_956301423;

}
async function loadIndex_553649054() {
  var result_553649056 = null;

  BeforeRet: {
    var indexURL_553649062 = document.getElementById("indexLink").getAttribute("href");
    var rootURL_553649088 = HEX5BHEX5D_721421595(cstrToNimstr(indexURL_553649062), HEX2EHEX2E_956301416(0, 14));
    var resp_553649100 = (await (await fetch(indexURL_553649062)).text());
    var indexElem_553649101 = document.createElement("div");
    indexElem_553649101.innerHTML = resp_553649100;
    Label1: {
      var href_553649123 = null;
      var colontmp__553649383 = [];
      colontmp__553649383 = indexElem_553649101.getElementsByClassName("reference");
      var i_553649385 = 0;
      var L_553649386 = (colontmp__553649383).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553649385 < L_553649386)) break Label3;
            href_553649123 = colontmp__553649383[chckIndx(i_553649385, 0, (colontmp__553649383).length - 1)];
            href_553649123.setAttribute("href", toJSStr((rootURL_553649088 || []).concat(cstrToNimstr(href_553649123.getAttribute("href")) || [])));
            db_553648877[0].push(href_553649123);;
            contents_553648878[0].push(href_553649123.getAttribute("data-doc-search-tag"));;
            i_553649385 = addInt(i_553649385, 1);
            if (!(((colontmp__553649383).length == L_553649386))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_553649056 = undefined;
    break BeforeRet;
  };

  return result_553649056;

}

function then_553649232(future_553649235, onSuccess_553649236, onReject_553649237) {
  var result_553649238 = null;

  BeforeRet: {
    var ret_553649248 = null;
    ret_553649248 = future_553649235.then(onSuccess_553649236, onReject_553649237)
    result_553649238 = ret_553649248;
    break BeforeRet;
  };

  return result_553649238;

}

function nsuToLowerAsciiChar(c_721420373) {
  var result_721420374 = 0;

    if ((ConstSet2[c_721420373] != undefined)) {
    result_721420374 = (c_721420373 ^ 32);
    }
    else {
      result_721420374 = c_721420373;
    }
    

  return result_721420374;

}

function fuzzyMatch_704643088(pattern_704643089, str_704643090) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_704643093 = {Field0: 0, Field1: false};

    var scoreState_704643094 = (-100);
    var headerMatched_704643095 = false;
    var unmatchedLeadingCharCount_704643096 = 0;
    var consecutiveMatchCount_704643097 = 0;
    var strIndex_704643098 = 0;
    var patIndex_704643099 = 0;
    var score_704643100 = 0;
    Label1: {
        Label2: while (true) {
        if (!((strIndex_704643098 < ((str_704643090) == null ? 0 : (str_704643090).length)) && (patIndex_704643099 < ((pattern_704643089) == null ? 0 : (pattern_704643089).length)))) break Label2;
          Label3: {
            var patternChar_704643103 = nsuToLowerAsciiChar(pattern_704643089.charCodeAt(chckIndx(patIndex_704643099, 0, (pattern_704643089).length - 1)));
            var strChar_704643104 = nsuToLowerAsciiChar(str_704643090.charCodeAt(chckIndx(strIndex_704643098, 0, (str_704643090).length - 1)));
            if ((ConstSet3[patternChar_704643103] != undefined)) {
            patIndex_704643099 = addInt(patIndex_704643099, 1);
            break Label3;
            }
            
            if ((ConstSet4[strChar_704643104] != undefined)) {
            strIndex_704643098 = addInt(strIndex_704643098, 1);
            break Label3;
            }
            
            if ((!(headerMatched_704643095) && (strChar_704643104 == 58))) {
            headerMatched_704643095 = true;
            scoreState_704643094 = (-100);
            score_704643100 = ((Math.floor((0.5 * score_704643100))) | 0);
            patIndex_704643099 = 0;
            strIndex_704643098 = addInt(strIndex_704643098, 1);
            break Label3;
            }
            
            if ((strChar_704643104 == patternChar_704643103)) {
            switch (scoreState_704643094) {
            case (-100):
            case 20:
              scoreState_704643094 = 10;
              break;
            case 0:
              scoreState_704643094 = 5;
              score_704643100 = addInt(score_704643100, scoreState_704643094);
              break;
            case 10:
            case 5:
              consecutiveMatchCount_704643097 = addInt(consecutiveMatchCount_704643097, 1);
              scoreState_704643094 = 5;
              score_704643100 = addInt(score_704643100, mulInt(5, consecutiveMatchCount_704643097));
              if ((scoreState_704643094 == 10)) {
              score_704643100 = addInt(score_704643100, 10);
              }
              
              var onBoundary_704643156 = (patIndex_704643099 == ((pattern_704643089) == null ? -1 : (pattern_704643089).length - 1));
              if ((!(onBoundary_704643156) && (strIndex_704643098 < ((str_704643090) == null ? -1 : (str_704643090).length - 1)))) {
              var nextPatternChar_704643157 = nsuToLowerAsciiChar(pattern_704643089.charCodeAt(chckIndx(addInt(patIndex_704643099, 1), 0, (pattern_704643089).length - 1)));
              var nextStrChar_704643158 = nsuToLowerAsciiChar(str_704643090.charCodeAt(chckIndx(addInt(strIndex_704643098, 1), 0, (str_704643090).length - 1)));
              if (!!((ConstSet5[nextStrChar_704643158] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_704643158 == nextPatternChar_704643157));              }              onBoundary_704643156 = Temporary4;
              }
              
              if (onBoundary_704643156) {
              scoreState_704643094 = 20;
              score_704643100 = addInt(score_704643100, scoreState_704643094);
              }
              
              break;
            case (-1):
            case (-3):
              if (!((ConstSet6[str_704643090.charCodeAt(chckIndx(subInt(strIndex_704643098, 1), 0, (str_704643090).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_704643090.charCodeAt(chckIndx(subInt(strIndex_704643098, 1), 0, (str_704643090).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_704643090.charCodeAt(chckIndx(strIndex_704643098, 0, (str_704643090).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_704643182 = Temporary5;
              if (isLeadingChar_704643182) {
              scoreState_704643094 = 10;
              }
              else {
                scoreState_704643094 = 0;
                score_704643100 = addInt(score_704643100, scoreState_704643094);
              }
              
              break;
            }
            patIndex_704643099 = addInt(patIndex_704643099, 1);
            }
            else {
              switch (scoreState_704643094) {
              case (-100):
                scoreState_704643094 = (-3);
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                break;
              case 5:
                scoreState_704643094 = (-1);
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                consecutiveMatchCount_704643097 = 0;
                break;
              case (-3):
                if ((unmatchedLeadingCharCount_704643096 < 3)) {
                scoreState_704643094 = (-3);
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                }
                
                unmatchedLeadingCharCount_704643096 = addInt(unmatchedLeadingCharCount_704643096, 1);
                break;
              default: 
                scoreState_704643094 = (-1);
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                break;
              }
            }
            
            strIndex_704643098 = addInt(strIndex_704643098, 1);
          };
        }
    };
      if (!(patIndex_704643099 == ((pattern_704643089) == null ? 0 : (pattern_704643089).length))) Temporary7 = false; else {        if ((strIndex_704643098 == ((str_704643090) == null ? 0 : (str_704643090).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_704643090.charCodeAt(chckIndx(strIndex_704643098, 0, (str_704643090).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    score_704643100 = addInt(score_704643100, 10);
    }
    
    var colontmp__553649402 = nimMax(0, score_704643100);
    var colontmp__553649403 = (0 < score_704643100);
    result_704643093 = nimCopy(result_704643093, {Field0: colontmp__553649402, Field1: colontmp__553649403}, NTI704643086);

  return result_704643093;

}

function escapeCString_553648879(x_553648880, x_553648880_Idx) {
    var s_553648881 = [];
    Label1: {
      var c_553648882 = 0;
      var iHEX60gensym6_553649406 = 0;
      var nHEX60gensym6_553649407 = ((x_553648880[x_553648880_Idx]) == null ? 0 : (x_553648880[x_553648880_Idx]).length);
      Label2: {
          Label3: while (true) {
          if (!(iHEX60gensym6_553649406 < nHEX60gensym6_553649407)) break Label3;
            c_553648882 = x_553648880[x_553648880_Idx].charCodeAt(chckIndx(iHEX60gensym6_553649406, 0, (x_553648880[x_553648880_Idx]).length - 1));
            switch (c_553648882) {
            case 60:
              s_553648881.push.apply(s_553648881, [38,108,116,59]);;
              break;
            case 62:
              s_553648881.push.apply(s_553648881, [38,103,116,59]);;
              break;
            default: 
              addChar(s_553648881, c_553648882);;
              break;
            }
            iHEX60gensym6_553649406 = addInt(iHEX60gensym6_553649406, 1);
          }
      };
    };
    x_553648880[x_553648880_Idx] = toJSStr(s_553648881);

  
}

function dosearch_553648883(value_553648884) {
    
function HEX3Aanonymous_553648911(a_553648916, b_553648917) {
      var result_553648922 = 0;

        result_553648922 = subInt(b_553648917["Field1"], a_553648916["Field1"]);

      return result_553648922;

    }

  var result_553648885 = null;

  BeforeRet: {
    if (((db_553648877[0]).length == 0)) {
    break BeforeRet;
    }
    
    var ul_553648889 = tree_553648258("UL", []);
    result_553648885 = tree_553648258("DIV", []);
    setClass_553648280(result_553648885, "search_results");
    var matches_553648894 = [];
    Label1: {
      var i_553648902 = 0;
      var colontmp__553649393 = 0;
      colontmp__553649393 = (db_553648877[0]).length;
      var i_553649394 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553649394 < colontmp__553649393)) break Label3;
            i_553648902 = i_553649394;
            Label4: {
              var c_553648903 = contents_553648878[0][chckIndx(i_553648902, 0, (contents_553648878[0]).length - 1)];
              if (((c_553648903 == "Examples") || (c_553648903 == "PEG construction"))) {
              break Label4;
              }
              
              var tmpTuple_553648904 = fuzzyMatch_704643088(value_553648884, c_553648903);
              var score_553648905 = tmpTuple_553648904["Field0"];
              var matched_553648906 = tmpTuple_553648904["Field1"];
              if (matched_553648906) {
              matches_553648894.push({Field0: db_553648877[0][chckIndx(i_553648902, 0, (db_553648877[0]).length - 1)], Field1: score_553648905});;
              }
              
            };
            i_553649394 = addInt(i_553649394, 1);
          }
      };
    };
    matches_553648894.sort(HEX3Aanonymous_553648911);
    Label5: {
      var i_553648939 = 0;
      var colontmp__553649397 = 0;
      colontmp__553649397 = nimMin((matches_553648894).length, 29);
      var i_553649398 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_553649398 < colontmp__553649397)) break Label7;
            i_553648939 = i_553649398;
            matches_553648894[chckIndx(i_553648939, 0, (matches_553648894).length - 1)]["Field0"].innerHTML = matches_553648894[chckIndx(i_553648939, 0, (matches_553648894).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            escapeCString_553648879(matches_553648894[chckIndx(i_553648939, 0, (matches_553648894).length - 1)]["Field0"], "innerHTML");
            add_553648276(ul_553648889, tree_553648258("LI", [matches_553648894[chckIndx(i_553648939, 0, (matches_553648894).length - 1)]["Field0"]]));
            i_553649398 = addInt(i_553649398, 1);
          }
      };
    };
    if ((ul_553648889.childNodes.length == 0)) {
    add_553648276(result_553648885, tree_553648258("B", [text_553648283("no search results")]));
    }
    else {
      add_553648276(result_553648885, tree_553648258("B", [text_553648283("search results")]));
      add_553648276(result_553648885, ul_553648889);
    }
    
  };

  return result_553648885;

}

function search() {
    
function wrapper_553649217() {
        var elem_553649218 = document.getElementById("searchInput");
        var value_553649219 = elem_553649218.value;
        if (!((((value_553649219) == null ? 0 : (value_553649219).length) == 0))) {
        if ((oldtoc_553649212[0] == null)) {
        oldtoc_553649212[0] = document.getElementById("tocRoot");
        }
        
        var results_553649223 = dosearch_553648883(value_553649219);
        replaceById_553648286("tocRoot", results_553649223);
        }
        else {
        if (!((oldtoc_553649212[0] == null))) {
        replaceById_553648286("tocRoot", oldtoc_553649212[0]);
        }
        }

      
    }

    if ((loadIndexFut_553649215[0] == null)) {
    loadIndexFut_553649215[0] = loadIndex_553649054();
    var _ = then_553649232(loadIndexFut_553649215[0], wrapper_553649217, null);
    }
    
    if (!((timer_553649213[0] == null))) {
    clearTimeout(timer_553649213[0]);
    }
    
    timer_553649213[0] = setTimeout(wrapper_553649217, 400);

  
}

function copyToClipboard() {
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    

  
}
var Temporary1;
var t_553648167 = window.localStorage.getItem("theme");
if ((t_553648167 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_553648167;
}

setTheme(Temporary1);
var alternative_553648835 = [null];
var db_553648877 = [[]];
var contents_553648878 = [[]];
var oldtoc_553649212 = [null];
var timer_553649213 = [null];
var loadIndexFut_553649215 = [null];
copyToClipboard();
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
