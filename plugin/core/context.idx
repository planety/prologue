nimTitle	context	core/context.html	module src/prologue/core/context		0
nim	PathHandler	core/context.html#PathHandler	type PathHandler		29
nim	Path	core/context.html#Path	object Path		33
nim	RePath	core/context.html#RePath	object RePath		37
nim	ReRouter	core/context.html#ReRouter	type ReRouter		41
nim	ReversedRouter	core/context.html#ReversedRouter	type ReversedRouter		44
nim	GlobalScope	core/context.html#GlobalScope	type GlobalScope		46
nim	Context	core/context.html#Context	type Context		54
nim	AsyncEvent	core/context.html#AsyncEvent	type AsyncEvent		65
nim	SyncEvent	core/context.html#SyncEvent	type SyncEvent		66
nim	Event	core/context.html#Event	object Event		68
nim	HandlerAsync	core/context.html#HandlerAsync	type HandlerAsync		75
nim	ErrorHandler	core/context.html#ErrorHandler	type ErrorHandler		77
nim	ErrorHandlerTable	core/context.html#ErrorHandlerTable	type ErrorHandlerTable		79
nim	UploadFile	core/context.html#UploadFile	object UploadFile		81
nim	ptrnWildcard	core/context.html#ptrnWildcard	PatternMatchingType.ptrnWildcard		85
nim	ptrnParam	core/context.html#ptrnParam	PatternMatchingType.ptrnParam		85
nim	ptrnText	core/context.html#ptrnText	PatternMatchingType.ptrnText		85
nim	PatternMatchingType	core/context.html#PatternMatchingType	enum PatternMatchingType		85
nim	BasePatternNode	core/context.html#BasePatternNode	object BasePatternNode		91
nim	PatternNode	core/context.html#PatternNode	object PatternNode		100
nim	Router	core/context.html#Router	type Router		114
nim	default404Handler	core/context.html#default404Handler,Context	proc default404Handler(ctx: Context): Future[void]		118
nim	default500Handler	core/context.html#default500Handler,Context	proc default500Handler(ctx: Context): Future[void]		119
nim	gScope	core/context.html#gScope,Context	proc gScope(ctx: Context): lent GlobalScope		122
nim	size	core/context.html#size,Context	proc size(ctx: Context): int8		126
nim	incSize	core/context.html#incSize,Context,int	proc incSize(ctx: Context; num = 1)		130
nim	first	core/context.html#first,Context	proc first(ctx: Context): bool		134
nim	first=	core/context.html#first=,Context,bool	proc first=(ctx: Context; first: bool)		138
nim	middlewares	core/context.html#middlewares,Context	proc middlewares(ctx: Context): lent seq[HandlerAsync]		142
nim	middlewares=	core/context.html#middlewares=,Context,seq[HandlerAsync]	proc middlewares=(ctx: Context; middlewares: seq[HandlerAsync])		146
nim	addMiddlewares	core/context.html#addMiddlewares,Context,HandlerAsync	proc addMiddlewares(ctx: Context; middleware: HandlerAsync)		150
nim	addMiddlewares	core/context.html#addMiddlewares,Context,seq[HandlerAsync]	proc addMiddlewares(ctx: Context; middleware: seq[HandlerAsync])		154
nim	execEvent	core/context.html#execEvent,Event	proc execEvent(event: Event)		158
nim	initUploadFile	core/context.html#initUploadFile,string,string	proc initUploadFile(filename, body: string): UploadFile		164
nim	getUploadFile	core/context.html#getUploadFile,Context,string	proc getUploadFile(ctx: Context; name: string): UploadFile		168
nim	save	core/context.html#save,UploadFile,string,string	proc save(uploadFile: UploadFile; dir: string; filename = "")		173
nim	newErrorHandlerTable	core/context.html#newErrorHandlerTable	proc newErrorHandlerTable(initialSize = defaultInitialSize): ErrorHandlerTable		182
nim	newErrorHandlerTable	core/context.html#newErrorHandlerTable,openArray[]	proc newErrorHandlerTable(pairs: openArray[(HttpCode, ErrorHandler)]): ErrorHandlerTable		186
nim	newReversedRouter	core/context.html#newReversedRouter	proc newReversedRouter(): ReversedRouter		191
nim	initEvent	core/context.html#initEvent,AsyncEvent	proc initEvent(handler: AsyncEvent): Event		195
nim	initEvent	core/context.html#initEvent,SyncEvent	proc initEvent(handler: SyncEvent): Event		199
nim	init	core/context.html#init,Context,Request,Response,GlobalScope	proc init(ctx: Context; request: Request; response: Response; gScope: GlobalScope)		203
nim	extend	core/context.html#extend.e,Context	method extend(ctx: Context)		213
nim	newContextFrom	core/context.html#newContextFrom,Context,Context	proc newContextFrom(ctx: Context; src: Context)		216
nim	newContextTo	core/context.html#newContextTo,Context,Context	proc newContextTo(ctx: Context; src: Context)		227
nim	getSettings	core/context.html#getSettings,Context,string	proc getSettings(ctx: Context; key: string): JsonNode		233
nim	flash	core/context.html#flash,Context,string	proc flash(ctx: Context; msgs: string; category = FlashLevel.Info)		238
nim	flash	core/context.html#flash,Context,string,string	proc flash(ctx: Context; msgs: string; category: string)		242
nim	getFlashedMsgs	core/context.html#getFlashedMsgs,Context	proc getFlashedMsgs(ctx: Context): seq[string]		246
nim	getFlashedMsgsWithCategory	core/context.html#getFlashedMsgsWithCategory,Context	proc getFlashedMsgsWithCategory(ctx: Context): seq[(string, string)]		249
nim	getFlashedMsg	core/context.html#getFlashedMsg,Context,FlashLevel	proc getFlashedMsg(ctx: Context; category: FlashLevel): Option[string]		252
nim	getFlashedMsg	core/context.html#getFlashedMsg,Context,string	proc getFlashedMsg(ctx: Context; category: string): Option[string]		255
nim	respond	core/context.html#respond,Context,HttpCode,string,ResponseHeaders	proc respond(ctx: Context; code: HttpCode; body: string; headers: ResponseHeaders): Future[\n    void]		258
nim	respond	core/context.html#respond,Context	proc respond(ctx: Context): Future[void]		265
nim	respond	core/context.html#respond,Context,HttpCode,string	proc respond(ctx: Context; code: HttpCode; body: string): Future[void]		269
nim	send	core/context.html#send,Context,string	proc send(ctx: Context; content: string): Future[void]		273
nim	getCookie	core/context.html#getCookie,Context,string,string	proc getCookie(ctx: Context; key: string; default = ""): string		277
nim	setCookie	core/context.html#setCookie,Context,Cookie	proc setCookie(ctx: Context; cookie: Cookie)		282
nim	setCookie	core/context.html#setCookie,Context,string,string,string,Option[int],string,string	proc setCookie(ctx: Context; key, value: string; expires = "";\n          maxAge: Option[int] = none(int); domain = ""; path = "";\n          secure = false; httpOnly = false; sameSite = Lax)		286
nim	setCookie	core/context.html#setCookie,Context,string,string,,Option[int],string,string	proc setCookie(ctx: Context; key, value: string; expires: DateTime | Time;\n          maxAge: Option[int] = none(int); domain = ""; path = "";\n          secure = false; httpOnly = false; sameSite = Lax)		293
nim	deleteCookie	core/context.html#deleteCookie,Context,string,string,string	proc deleteCookie(ctx: Context; key: string; path = ""; domain = "")		300
nim	defaultHandler	core/context.html#defaultHandler,Context	proc defaultHandler(ctx: Context): Future[void]		304
nim	getPostParamsOption	core/context.html#getPostParamsOption,Context,string	proc getPostParamsOption(ctx: Context; key: string): Option[string]		325
nim	getPostParams	core/context.html#getPostParams,Context,string,string	proc getPostParams(ctx: Context; key: string; default = ""): string		339
nim	getQueryParamsOption	core/context.html#getQueryParamsOption,Context,string	proc getQueryParamsOption(ctx: Context; key: string): Option[string]		352
nim	getQueryParams	core/context.html#getQueryParams,Context,string,string	proc getQueryParams(ctx: Context; key: string; default = ""): string		358
nim	getPathParamsOption	core/context.html#getPathParamsOption,Context,string	proc getPathParamsOption(ctx: Context; key: string): Option[string]		364
nim	getPathParams	core/context.html#getPathParams,Context,string	proc getPathParams(ctx: Context; key: string): string		370
nim	getPathParams	core/context.html#getPathParams,Context,string,T	proc getPathParams[T: BaseType](ctx: Context; key: string; default: T): T		376
nim	getFormParamsOption	core/context.html#getFormParamsOption,Context,string	proc getFormParamsOption(ctx: Context; key: string): Option[string]		386
nim	getFormParams	core/context.html#getFormParams,Context,string,string	proc getFormParams(ctx: Context; key: string; default = ""): string		395
nim	setResponse	core/context.html#setResponse,Context,HttpCode,string	proc setResponse(ctx: Context; code: HttpCode; body = ""; version = HttpVer11)		406
nim	setResponse	core/context.html#setResponse,Context,Response	proc setResponse(ctx: Context; response: Response)		413
nim	urlFor	core/context.html#urlFor,Context,string,openArray[],openArray[]	proc urlFor(ctx: Context; handler: string;\n       parameters: openArray[(string, string)] = @[];\n       queryParams: openArray[(string, string)] = @[]; usePlus = true;\n       omitEq = true): string		446
nim	abortExit	core/context.html#abortExit,Context,string	proc abortExit(ctx: Context; code = Http401; body = "";\n          headers = initResponseHeaders(); version = HttpVer11)		467
nim	attachment	core/context.html#attachment,Context,string,string	proc attachment(ctx: Context; downloadName: string; charset = "utf-8")		475
nim	staticFileResponse	core/context.html#staticFileResponse,Context,string,string,string,string,string,int	proc staticFileResponse(ctx: Context; filename, dir: string; mimetype = "";\n                   downloadName = ""; charset = "utf-8"; bufSize = 40960;\n                   headers = none(ResponseHeaders)): owned(Future[void])		499
nimgrp	flash	core/context.html#flash-procs-all	proc		238
nimgrp	setresponse	core/context.html#setResponse-procs-all	proc		406
nimgrp	addmiddlewares	core/context.html#addMiddlewares-procs-all	proc		150
nimgrp	getpathparams	core/context.html#getPathParams-procs-all	proc		370
nimgrp	getflashedmsg	core/context.html#getFlashedMsg-procs-all	proc		252
nimgrp	initevent	core/context.html#initEvent-procs-all	proc		195
nimgrp	respond	core/context.html#respond-procs-all	proc		258
nimgrp	setcookie	core/context.html#setCookie-procs-all	proc		282
nimgrp	newerrorhandlertable	core/context.html#newErrorHandlerTable-procs-all	proc		182
